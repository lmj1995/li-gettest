package com.lmj.test2;
/**
 * 线程调度
 *
 */
public class Dome3 {
/**
 * 线程休眠.单线程
 */
	
	    public void test(){
	    	//任务
	    	task1 t1 = new task1();
	    	task2 t2 = new task2();
	    	//调用
	    	t1.run();
	    	t2.run();
	    }
	  /**
	   * 多线程休眠  
	   */
	    public void test1(){
	    	//任务
	    	task1 t1 = new task1();
	    	task2 t2 = new task2();
	    	//线程
	    	Thread th1 = new Thread(t1);
	    	Thread th2 = new Thread(t2);
	    	//运行
	    	th1.start();
	    	th2.start();
	    }
	    
	    
}
class task1 implements Runnable{

	@Override
	public void run() {
		String name = Thread.currentThread().getName();
		for (int i = 0; i <10; i++) {
			System.out.println(name+"线程。i="+i);
			if (i==4) {
				System.out.println("线程休眠");
				try {
					Thread.sleep(2*1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
				
	}
	
}
class task2 implements Runnable{

	@Override
	public void run() {
		String name = Thread.currentThread().getName();
		for (int j = 0; j < 10; j++) {
			System.out.println(name+"线程。j="+j);
		}
		
	}
	
}
class task3 implements Runnable{

	@Override
	public void run() {
		
	}
	
}
