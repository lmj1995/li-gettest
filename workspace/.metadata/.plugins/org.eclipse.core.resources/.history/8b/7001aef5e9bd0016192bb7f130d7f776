package com.lmj.test;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;

import javax.xml.crypto.Data;

public class TCPserver {

	/**
	 * 服务端
	 */
	          public static final int PORT_SERVER =9600;
	          private ServerSocket serverSocket=null;
	          
	          public void test(){
	        	  //服务器
	        	  String data = "我是服务端";
	        	  try {
	        		  //new 对象
					serverSocket = new ServerSocket(PORT_SERVER);
					
					//操作
					Socket client = serverSocket.accept();
					System.out.println("服务端接受客户端");
					OutputStream os = client.getOutputStream();
					os.write(data.getBytes());
					System.out.println("服务器输出数据："+data);

				    // 关闭
					
					client.close();
					stop();
					System.out.println("服务端关闭");
				} catch (IOException e) {
					e.printStackTrace();
				}
	        	  
	          }
	          /**
	           * 服务端接收数据
	           */
	          public void test2(){
	        	  
	        	  String path = "";
	        	  try {
	        		  
//					InetAddress address = InetAddress.getLocalHost();
					serverSocket = new ServerSocket(PORT_SERVER);
					System.out.println("服务端创建");
					
					Socket client = serverSocket.accept();
					InputStream is = client.getInputStream();
					FileOutputStream fos = new FileOutputStream(new File(path));
					
					byte[] b = new byte[1024];
					int len =0; 
					while ((len = is.read(b)) !=-1) {
						fos.write(b,0, len);
					}
					//关闭
					fos.close();
					stop();
					System.out.println("服务器关闭");
					
				} catch (UnknownHostException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}
	        	  
	        	  
	          }
	          
	         public void stop(){
	        	 if (serverSocket != null && !serverSocket.isClosed()) {
					try {
						serverSocket.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
	         }
	
	
}





